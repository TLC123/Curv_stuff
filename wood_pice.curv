let
 
 alerp(a,b,t) =  (a)*(1-t) + ((b)*t);
arandom (aseed) = mod(sin(dot((aseed,aseed), (12.9898,78.233)))*43758.5453123, 1);
value_at (x,y,z) =arandom(arandom(arandom(x)+y)+z+2);
  onoise3d(x,y,z,t) =   (
   noise3d( mag(x+sin(2+z/3)*0.25,y+cos(0+z/4)*0.25)*5+sin(z)*0.2+sin(z/5)*0.1 ,y/15,x/15,t)
   //+noise3d(x/4,y/4,0,t)
   //+   noise3d(x,y,z,t)
   )
   
   
   ;
   
   
   
 noise3d(x,y,z,t) =

 let 

	    px= floor (x);
	    py= floor (y);
	    pz= floor (z);
		lbx= smoothstep(0,1,x-px);
	    lby= smoothstep(0,1,y-py);
	    lbz= smoothstep(0,1,z-pz);
	    p0 = value_at (px,  py,  pz);
        p1 = value_at (px+1,py,  pz);
        p2 = value_at (px+1,py+1,pz);
        p3 = value_at (px,  py+1,pz);
		
        p4 = value_at (px,  py,  pz+1);
        p5 = value_at (px+1,py,  pz+1);
        p6 = value_at (px+1,py+1,pz+1);
        p7 = value_at (px,  py+1,pz+1);
   	 
		p01 =alerp(p0,p1,lbx);
		p32 =alerp(p3,p2,lbx);
    	p45 =alerp(p4,p5,lbx);
		p76 =alerp(p7,p6,lbx);
		p0132=alerp(p01,p32,lby);
		p4576=alerp(p45,p76,lby);
   c1=alerp(p0132,p4576,lbz);
		
    in     sRGB(lerp((0.92,0.77,0.56),(0.8,0.66,0.49)*0.85,c1));

 
  my_offset (r) shape =
    make_shape {
        dist p : shape.dist p - r*abs (smoothstep(0,2,mag(shape.colour p))),
        colour p : shape.colour p,
        bbox : [shape.bbox[MIN]-r, shape.bbox[MAX]+r],
        is_2d : shape.is_2d,
        is_3d : shape.is_3d };
 

in 
  // my_offset 0.2  
  (  
smooth 1 .union(  sphere 10 >>move(0,0,-8),  
smooth 4 .union(
cone.exact {d:13,h:8} >>move(0,0,-4.5) ,
box.exact (12,12,10)  >>move( 0,0,6 ) 
))>>move(0,0,-6)
 >> colour onoise3d
 //>>show_dist 
 >>offset 0.5

 //colour((x,y,z,t)->sRGB((abs (my_sin(x)*0),abs(sin(y)*0),abs(sin(z*10)))))
)


 

 

